/*
In my latest project, I created a site where users are able to create designs based on different templates, fonts, and colors. This snippet of code was to show how I solved creating a sidemenu options for users to choose from.

The brand menu is where users can choose from different colors that were generated under brand names. These colors are read by CSS and translated into the users' designs.

Similarly the font menu is where users can change the font used within their design. These fonts are generated by Google API fonts and can thus easily be read by CSS as well.

The biggest problem I ran into was being able to save the fonts and colors that were chosen and updating the design to these new colors and fonts. I remedied this by saving the fonts and colors in the backend database which could then be dispatched into the frontend so that the designs could have the updated fonts and colors upon being opened.
*/

export default function CreateDesign() {
  //useState React Hooks to set menu statuses and starting fonts and colors
  const [showBrandMenu, setShowBrandMenu] = useState(false);
  const [showFontMenu, setShowFontMenu] = useState(false);
  const [color, setColor] = useState('');
  const [font, setFont] = useState('');

  //a function that opens the brand submenu so users could select the color they wanted for their design
  const openBrandMenu = () => {
    if (showBrandMenu) return;    //if it's already open, exit out of the function
    setShowBrandMenu(true);       //else set its state to true
  };

  //useEffect React Hook to add an on click event listener that opened and closed the brand menu
  useEffect(() => {
    if (!showBrandMenu) return;
    const closeBrandMenu = () => {
      setShowBrandMenu(false);
    };
    document.addEventListener('click', closeBrandMenu);
    return () => document.removeEventListener("click", closeBrandMenu);
  }, [showBrandMenu]);  //dependency array held the status of the brand menu, and only changed when this value changed

  //Similar functions for the font menu
  const openFontMenu = () => {
    if (showBrandMenu) return;
    setShowFontMenu(true);
  };

  useEffect(() => {
    if (!showFontMenu) return;
    const closeFontMenu = () => {
      setShowFontMenu(false);
    };
    document.addEventListener('click', closeFontMenu);
    return () => document.removeEventListener("click", closeFontMenu);
  }, [showFontMenu]);

  //JSX that was returned; what users saw on the webpage
  return (
    <>
      {/* utilizaion of the openBrandMenu function */}
      <button id='sidebar' onClick={openBrandMenu}>
        <img src={colors} alt='temp' height='40px' />
        Background Colors
      </button>
      {/* if the brand menu is open, this is what shows... */}
      {showBrandMenu && (
        <div id='temp-menu-item'>
          <div className='brands-menu-item'>
            <div id='temp-brand-title'>
              Brands
            </div>
            <div className="colors-container">
              {/* mapping through the brands object received in the dispatch */}
              {Object.values(brands).map(brand => (
                <div className="des-brand-colors">
                  <div id='des-brand-name'>
                    {brand.name}
                  </div>
                  <div id='brand-color-container'>
                    {/* mapping through the different colors set inside brands */}
                    {brand.colors.map(color => (
                      <div
                        id='each-color'
                        onClick={() => {
                          // setting the color to the name that was clicked (CSS color names)
                          setColor(color.name);
                        }}
                        style={{
                          backgroundColor: `${color.name}`
                        }}
                      >
                      </div>
                    ))}
                  </div>
                </div>
              ))}
            </div>
          </div>
          <div className='brands-menu-item'>
            <div id='color-title'>
              Colors
            </div>
            <div className='color-container'>
              {/* mapping through all of the colors registered by CSS */}
              {colorsByHue.map(color => (
                <div
                  id='each-color'
                  onClick={() => {
                    // setting the color to the name that was clicked
                    setColor(color.alias);
                  }}
                  style={{
                    backgroundColor: `${color.alias}`
                  }}
                >
                </div>
              ))}
            </div>
          </div>
        </div>
      )}
      <button id='sidebar' onClick={openFontMenu}>
        <img src={fonts} alt='temp' height='34px' />
        Fonts
      </button>
      {/* if the font menu is open, this is what shows... */}
      {showFontMenu && (
        <div id='temp-menu-item'>
          {/* mapping through Google API fonts */}
          {__fonts.map(font => (
            <div
              id='each-font'
              onClick={() => {
                // setting the font to the one the user clicked on
                setFont(font.family)
              }}
              style={{
                fontSize: '18px'
              }}
            >
              {font.family}
            </div>
          ))}
        </div>
      )}
    </>
  )
}
